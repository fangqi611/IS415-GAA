{
  "hash": "e4a009e69b4a571b9fdee182c9a4fdf3",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1 Part 2: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore\"\ndate: \"4th February 2024\"\ndate modified: \"last-modified\"\nformat: \n  html:\n    fontsize: 18px\nexecute:\n  echo: true\n  eval: true\n  freeze: true\n  warning: false\n---\n\n\n# 4. Deriving Network Kernel Density Estimation (NKDE)\n\nRun these code first to made sure the CRS of punggol and sgroads match in other to extract the punggol area to plot on tmap() later\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(arrow, lubridate, sf, tmap, tidyverse, maptools, sp, raster, spatstat, spNetwork, classInt, viridis, readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial/MPSZ-2019\", layer = \"MPSZ-2019\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MPSZ-2019' from data source \n  `/Users/fangqilim/fangqi611/IS415-GAA/Take-home_Ex/Take-home_Ex01/data/geospatial/MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npg <- mpsz %>%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm <- mpsz %>%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck <- mpsz %>%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw <- mpsz %>%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsgroads <- read_rds(\"data/rds/sgroads.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npg <- st_transform(pg, crs = st_crs(sgroads))\nst_crs(pg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n:::\n:::\n\n\nExtracting punggol out of mpsz using st_intersection() so we can plot on tmap() later\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadspg <- sgroads[st_intersection(sgroads, pg), ]\nplot(st_geometry(roadspg))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nChecking the structure of our data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(roadspg)\n```\n:::\n\n\nExtracting punggol area out of grab using st_intersection() so we can plot on tmap() later\n\n::: {.cell}\n\n```{.r .cell-code}\norigin_grab <- read_rds(\"data/rds/origin_grab.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_pg <- st_intersection(origin_grab, pg)\n```\n:::\n\n\nChecking the structure of our data again\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(grab_pg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsf [278 Ã— 17] (S3: sf/tbl_df/tbl/data.frame)\n $ trj_id       : chr [1:278] \"25142\" \"82931\" \"63521\" \"58685\" ...\n $ driving_mode : chr [1:278] \"car\" \"car\" \"car\" \"car\" ...\n $ osname       : chr [1:278] \"ios\" \"android\" \"android\" \"android\" ...\n $ pingtimestamp: int [1:278] 1554731672 1554811768 1554998495 1555147897 1555231248 1555334485 1555607870 1555684795 1555751335 1555756627 ...\n $ speed        : num [1:278] 12.25 13.01 12.39 13.12 3.89 ...\n $ bearing      : int [1:278] 196 236 278 240 194 293 60 238 99 288 ...\n $ accuracy     : num [1:278] 6 5.5 3.9 4 6 ...\n $ weekday      : Ord.factor w/ 7 levels \"Sun\"<\"Mon\"<\"Tue\"<..: NA NA NA NA NA NA NA NA NA NA ...\n $ start_hr     : Factor w/ 24 levels \"11\",\"2\",\"0\",\"3\",..: 13 6 22 14 8 13 21 23 14 15 ...\n $ day          : Factor w/ 14 levels \"9\",\"16\",\"11\",..: 8 1 3 5 13 14 12 9 7 7 ...\n $ SUBZONE_N    : chr [1:278] \"NORTHSHORE\" \"NORTHSHORE\" \"NORTHSHORE\" \"NORTHSHORE\" ...\n $ SUBZONE_C    : chr [1:278] \"PGSZ01\" \"PGSZ01\" \"PGSZ01\" \"PGSZ01\" ...\n $ PLN_AREA_N   : chr [1:278] \"PUNGGOL\" \"PUNGGOL\" \"PUNGGOL\" \"PUNGGOL\" ...\n $ PLN_AREA_C   : chr [1:278] \"PG\" \"PG\" \"PG\" \"PG\" ...\n $ REGION_N     : chr [1:278] \"NORTH-EAST REGION\" \"NORTH-EAST REGION\" \"NORTH-EAST REGION\" \"NORTH-EAST REGION\" ...\n $ REGION_C     : chr [1:278] \"NER\" \"NER\" \"NER\" \"NER\" ...\n $ geometry     :sfc_POINT of length 278; first list element:  'XY' num [1:2] 35549 43926\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:16] \"trj_id\" \"driving_mode\" \"osname\" \"pingtimestamp\" ...\n```\n:::\n:::\n\n\nPlotting Punggol area using grab_pg and roadpg, the intersections extracts Punggol area:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n\ntm_shape(grab_pg) + \n  tm_dots() +\ntm_shape(roadspg) +\n  tm_lines()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nPerforming the same analysis for tampines like how we did for punggol just now:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm <- st_transform(tm, crs = st_crs(sgroads))\nst_crs(tm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n:::\n\n```{.r .cell-code}\nroadstm <- st_intersection(sgroads, tm)\ngrab_tm <- st_intersection(origin_grab, tm)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n\ntm_shape(grab_tm) + \n  tm_dots() +\ntm_shape(roadstm) +\n  tm_lines()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## 4.1 Punggol Network Kernel Densty Estimation (NKDE) Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadspg <- st_cast(roadspg, \"LINESTRING\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlixelspg <- lixelize_lines(roadspg,\n                         750,\n                         mindist = 375)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplespg <- lines_center(lixelspg)\n```\n:::\n\n\nThe densities show high traffic flow in punggol area like shopping malls or heavy human flow area\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndensitiespg <- nkde(roadspg, \n                  events = grab_pg,\n                  w = rep(1,nrow(grab_pg)),\n                  samples = samplespg,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n```\n:::\n\n\nImporting densitiespg due to the large file size\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(densitiespg, \"data/rds/densitiespg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndensitiespg <- read_rds(\"data/rds/densitiespg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplespg$density <- densitiespg\nlixelspg$density <- densitiespg\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplespg$density <- samplespg$density*1000\nlixelspg$density <- lixelspg$density*1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n\ntm_shape(lixelspg) +\n  tm_lines(col=\"density\") +\ntm_shape(grab_pg) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## 4.2 Tampines Network Kernel Densty Estimation (NKDE) Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadstm <- st_collection_extract(roadstm, \"LINESTRING\")\nroadstm <- st_cast(roadstm, \"LINESTRING\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlixelstm <- lixelize_lines(roadstm,\n                         750,\n                         mindist = 375)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplestm <- lines_center(lixelstm)\n```\n:::\n\n\nThe densities show high traffic flow in punggol area like shopping malls or heavy human flow area\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndensitiestm <- nkde(roadstm, \n                  events = grab_tm,\n                  w = rep(1,nrow(grab_tm)),\n                  samples = samplestm,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, #we aggregate events within a 5m radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(densitiestm, \"data/rds/densitiestm.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndensitiestm <- read_rds(\"data/rds/densitiestm.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplestm$density <- densitiestm\nlixelstm$density <- densitiestm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplestm$density <- samplestm$density*1000\nlixelstm$density <- lixelstm$density*1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n\ntm_shape(lixelstm) +\n  tm_lines(col=\"density\") +\ntm_shape(grab_tm) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n# 5. Temporal Network Kernel Density Estimation (TNKDE)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_pg$pingtimestamp <- as_datetime(grab_pg$pingtimestamp)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_pg <- grab_pg %>%\n  mutate(hrday = hour(pingtimestamp))\n```\n:::\n\n\n## 5.1 Converting the Date field to a numeric field (counting days)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(grab_pg) + \n  geom_histogram(aes(x = hrday), bins = 30, color = \"white\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab_pg_tnke <- subset(grab_pg, grab_pg$hrday >= 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nw <- rep(1,nrow(grab_pg))\nsamples <- seq(0, max(grab_pg$hrday), 5)\n\ntime_kernel_values <- data.frame(\n  bw_10 = tkde(grab_pg$hrday, w = w, samples = samples, bw = 10, kernel_name = \"quartic\"),\n  bw_20 = tkde(grab_pg$hrday, w = w, samples = samples, bw = 20, kernel_name = \"quartic\"),\n  bw_30 = tkde(grab_pg$hrday, w = w, samples = samples, bw = 30, kernel_name = \"quartic\"),\n  bw_40 = tkde(grab_pg$hrday, w = w, samples = samples, bw = 40, kernel_name = \"quartic\"),\n  bw_50 = tkde(grab_pg$hrday, w = w, samples = samples, bw = 50, kernel_name = \"quartic\"),\n  bw_60 = tkde(grab_pg$hrday, w = w, samples = samples, bw = 60, kernel_name = \"quartic\"),\n  time = samples\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_time <- reshape2::melt(time_kernel_values,id.vars = \"time\")\ndf_time$variable <- as.factor(df_time$variable)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df_time) + \n  geom_line(aes(x = time, y = value)) +\n  facet_wrap(vars(variable), ncol=2, scales = \"free\") + \n  theme(axis.text = element_text(size = 5))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbw1 <- bw.bcv(grab_pg$hrday, nb = 10, lower = 1, upper = 10)\nbw2 <- bw.ucv(grab_pg$hrday, nb = 10, lower = 1, upper = 10)\n#bw3 <- bw.SJ(grab_pg$hrday, nb = 10, lower = 1, upper = 10)\n\n\ntime_kernel_values <- data.frame(\n  bw_bcv = tkde(grab_pg$hrday, w = w, samples = samples, bw = bw1, kernel_name = \"quartic\"),\n  bw_ucv = tkde(grab_pg$hrday, w = w, samples = samples, bw = bw2, kernel_name = \"quartic\"),\n  #bw_SJ = tkde(grab_pg$hrday, w = w, samples = samples, bw = bw3, kernel_name = \"quartic\"),\n  time = samples\n)\n\ndf_time <- reshape2::melt(time_kernel_values,id.vars = \"time\")\ndf_time$variable <- as.factor(df_time$variable)\n\nggplot(data = df_time) + \n  geom_line(aes(x = time, y = value)) +\n  facet_wrap(vars(variable), ncol=2, scales = \"free\")  + \n  theme(axis.text = element_text(size = 5))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\nSpatial dimension, investigating the spatial dimension.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# loading the road network\ndata(roadspg)\n\ntm_shape(roadspg) + \n  tm_lines(col = \"black\") + \n  tm_shape(grab_pg) + \n  tm_dots(col = \"red\", size = 0.1)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculating the densities\nnkde_densitiespg <- nkde(lines = roadspg,\n                       events = grab_pg,\n                       w = rep(1,nrow(grab_pg)),\n                       samples = samplespg,\n                       kernel_name = \"quartic\",\n                       bw = 450,\n                       adaptive = TRUE, trim_bw = 900,\n                       method = \"discontinuous\",\n                       div = \"bw\",\n                       max_depth = 10,\n                       digits = 2, tol = 0.1, agg = 5,\n                       grid_shape = c(1,1),\n                       verbose = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(nkde_densitiespg, \"data/rds/nkde_densitiespg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnkde_densitiespg <- read_rds(\"data/rds/nkde_densitiespg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamplespg$density <- nkde_densitiespg$k * 1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(samplespg) + \n  tm_dots(col = \"density\", style = \"kmeans\", n = 8, palette = \"viridis\", size = 0.05) + \n  tm_layout(legend.outside = TRUE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01Part2_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# choosing sample in times (every 10 days)\nsample_time <- seq(0, max(grab_pg$hrday), 1)\n\n# calculating densities\ntnkde_densitiespg <- tnkde(lines = roadspg,\n                         events = grab_pg,\n                         time_field = \"hrday\",\n                         w = rep(1, nrow(grab_pg)), \n                         samples_loc = samplespg,\n                         samples_time = sample_time, \n                         kernel_name = \"quartic\",\n                         bw_net = 1000, bw_time = 2,\n                         adaptive = TRUE,\n                         trim_bw_net = 24,\n                         trim_bw_time = 1,\n                         method = \"discontinuous\",\n                         div = \"bw\", max_depth = 10,\n                         digits = 2, tol = 0.01,\n                         agg = 15, grid_shape = c(1, 1), \n                         verbose = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(tnkde_densitiespg, \"data/rds/tnkde_densitiespg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntnkde_densitiespg <- read_rds(\"data/rds/tnkde_densitiespg.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# creating a color palette for all the densities\nall_densities <- c(tnkde_densitiespg$k)\ncolor_breaks <- classIntervals(all_densities, n = 10, style = \"kmeans\")\n\n# generating a map at each sample time\nall_maps <- lapply(1:ncol(tnkde_densitiespg$k), function(i){\n  time <- sample_time[[i]]\n  #date <- as.Date(grab_pg$hrday) + time\n  \n  samplespg$density <- tnkde_densitiespg$k[,i]\n  map1 <- tm_shape(samplespg) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks$brks, palette = plasma(10, direction = -1)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ PUNGGOL\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\n# creating a gif with all the maps\ntmap_animation(all_maps, filename = \"images/animated_map.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCreating frames\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n====\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n===\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCreating animation\nAnimation saved to /Users/fangqilim/fangqi611/IS415-GAA/Take-home_Ex/Take-home_Ex01/images/animated_map.gif \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/animated_map.gif\")\n```\n\n::: {.cell-output-display}\n![](images/animated_map.gif)\n:::\n:::\n\n\n#6. Describe the spatial patterns revealed by the kernel density maps.\n\nThe KDE maps shows us the high density areas with high grab traffic in Singapore, this can be seen from the high density, this means more grab cars will be cluttered in those areas. We can see this in the context of Punggol (NKDE analysis) such as shopping malls or residential complexes where demand is higher. While in Tampines, higher demand is observed at commercial centers or transportation hubs.\n\nBased on the Network Kernel Density Estimation (NKDE) analysis for both neighborhoods, Tampines have a higher density than Punggol.\n\nBy performing Temporal Network Kernel Density Estimation (TNKDE) analysis on Punggol we can see the hour variation of demand we can see it is usually the peak hours when commuters are travelling in the morning, afternoon and at night when getting to work most probably.\n\nWhile we can see when does grab face demand, another perspective we can consider is that Singaporeans do use grab hailing services heavily as it is the main grab hailing company Singaporeans use (despite having other brands like Gojek, ComfortDelgro). The demand of grab reflects the busy and hustling lifestyle of Singaporeans.\n\n# 7. Learning Points\n\n## 7.1 Solving Coding Issues and Personal Learning Points\n\nWhile it might sound like a no brainer to seek help and look for other methods when your code isn't working, but when I am too stuck on an issue I will forget to think broader. I believe this take- home ex1 is a good reminder to me that I should look beyond and further than what is displayed in front of me. I believe, this is a good skill that will prepare me to be a better data scientist in the future.\n\nFor example, having to load large codes like origin_grab and destination_grab, it was only with Prof's Kam help that I remembered that I can save it as a rds file, and this saves me time and prevent my R from lagging.\n",
    "supporting": [
      "Take-home_Ex01Part2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}